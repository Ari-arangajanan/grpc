package org.example.service;import com.devProblems.BookAuthorServiceGrpc;import com.devProblems.BookReq;import com.google.protobuf.ByteString;import org.example.interfaces.SagaSteps;import org.example.model.Author;import org.springframework.util.SerializationUtils;import java.util.Objects;public class SaveBook implements SagaSteps {    private final BookAuthorServiceGrpc.BookAuthorServiceBlockingStub bookAuthorServiceBlockingStub;    private final Author author;    public SaveBook(BookAuthorServiceGrpc.BookAuthorServiceBlockingStub bookAuthorServiceBlockingStub, Author author) {        this.bookAuthorServiceBlockingStub = bookAuthorServiceBlockingStub;        this.author = author;    }    @Override    public void execute() {        BookReq bookReq = BookReq.newBuilder()                .setBookReq(ByteString.copyFrom(Objects.requireNonNull(SerializationUtils.serialize(author.getId()))))                .build();        byte[] serializableObj = bookAuthorServiceBlockingStub.saveBook(bookReq).getBookResponse().toByteArray();        Boolean res = (Boolean) SerializationUtils.deserialize(serializableObj);        if (!Boolean.TRUE.equals(res)) {            throw new RuntimeException("Failed to save book");        }    }    @Override    public void compensate() {        // Implement compensation logic if necessary    }}